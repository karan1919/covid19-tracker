{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","components/LastUpdate.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Cards","className","styles","container","Grid","spacing","justify","item","component","Card","xs","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","value","toLocaleString","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","setDailyData","countryPieChart","labels","datasets","label","backgroundColor","lineChart","length","borderColor","fill","LastUpdate","Date","toDateString","App","state","fetchedData","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f467479.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__bQdwe\",\"card\":\"Cards_card__3rNWl\",\"infected\":\"Cards_infected__2_mbU\",\"recovered\":\"Cards_recovered__2sXs-\",\"deaths\":\"Cards_deaths__1AjNI\"};","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n      return error;\r\n  }\r\n};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            className={cx(styles.card, styles.infected)}\r\n          >\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Confirmed\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                {confirmed.value.toLocaleString()}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            className={cx(styles.card, styles.recovered)}\r\n          >\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Recovered\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                {recovered.value.toLocaleString()}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            className={cx(styles.card, styles.deaths)}\r\n          >\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deaths\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                {deaths.value.toLocaleString()}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchCountries } from \"../../api\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <FormControl className={styles.formControl}>\r\n          <NativeSelect\r\n            defaultValue=\"\"\r\n            onChange={(e) => handleCountryChange(e.target.value)}\r\n          >\r\n            <option value=\"\">Global</option>\r\n            {fetchedCountries.map((country, i) => (\r\n              <option key={i} value={country}>\r\n                {country}\r\n              </option>\r\n            ))}\r\n          </NativeSelect>\r\n        </FormControl>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const countryPieChart = confirmed ? (\r\n    <Pie\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {country ? countryPieChart : lineChart}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst LastUpdate = ({ data: { lastUpdate } }) => {\r\n  return (\r\n    <Typography>Last update: {new Date(lastUpdate).toDateString()}</Typography>\r\n  );\r\n};\r\n\r\nexport default LastUpdate;\r\n","import React, { Component } from \"react\";\r\nimport { fetchData } from \"./api\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\r\nimport Chart from \"./components/Chart/Chart\";\r\nimport LastUpdate from \"./components/LastUpdate\"\r\nimport styles from \"./App.module.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <LastUpdate data={data} />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__3__Jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__tZX5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3xeul\"};"],"sourceRoot":""}